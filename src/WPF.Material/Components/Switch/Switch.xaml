<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:styles="clr-namespace:WPF.Material.Styles"
    mc:Ignorable="po">

    <Style TargetType="{x:Type components:Switch}">
        <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceContainerHighest}" />
        <Setter Property="Foreground" Value="{DynamicResource Material.Colors.Outline}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.Outline}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="52" />
        <Setter Property="Height" Value="32" />
        <Setter Property="MinWidth" Value="52" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="styles:Shape.Style" Value="Full" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:Switch}">
                    <ControlTemplate.Resources>
                        <Storyboard
                            x:Key="Storyboard1_75"
                            po:Freeze="True"
                            TargetName="HandleTransform">
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                To="1.75"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                To="1.75"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                        </Storyboard>

                        <Storyboard
                            x:Key="Storyboard1_5"
                            po:Freeze="True"
                            TargetName="HandleTransform">
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                To="1.5"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                To="1.5"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                        </Storyboard>

                        <Storyboard
                            x:Key="Storyboard1_0"
                            po:Freeze="True"
                            TargetName="HandleTransform">
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
                                To="1"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                            <DoubleAnimation
                                EasingFunction="{x:Static styles:MotionEasings.Standard}"
                                Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                To="1"
                                Duration="{x:Static styles:MotionDurations.Short200}" />
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <components:NaivePanel>
                        <components:Surface
                            x:Name="TrackBackground"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShapeCorner="{TemplateBinding styles:Shape.Corner}"
                            ShapeRadius="{TemplateBinding styles:Shape.Radius}"
                            ShapeStyle="{TemplateBinding styles:Shape.Style}"
                            UseCornersOnRadiusOverride="{TemplateBinding styles:Shape.UseCornersOnRadiusOverride}"
                            UseStyleOnRadiusOverride="{TemplateBinding styles:Shape.UseStyleOnRadiusOverride}" />

                        <Track x:Name="PART_Track" Margin="8,0">
                            <Track.Thumb>
                                <components:SwitchThumb x:Name="Handle">
                                    <components:NaivePanel>
                                        <components:Container
                                            Foreground="{TemplateBinding Foreground}"
                                            IsHitTestVisible="False"
                                            RenderTransformOrigin="0.5,0.5"
                                            ShapeStyle="Full">

                                            <components:Container.RenderTransform>
                                                <ScaleTransform ScaleX="2.5" ScaleY="2.5" />
                                            </components:Container.RenderTransform>
                                        </components:Container>

                                        <components:Surface
                                            Background="{TemplateBinding Foreground}"
                                            RenderTransformOrigin="0.5,0.5"
                                            ShapeStyle="Full">

                                            <components:Surface.RenderTransform>
                                                <ScaleTransform x:Name="HandleTransform" />
                                            </components:Surface.RenderTransform>
                                        </components:Surface>
                                    </components:NaivePanel>
                                </components:SwitchThumb>
                            </Track.Thumb>
                        </Track>
                    </components:NaivePanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="0.12" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Handle" Property="Opacity" Value="0.38" />
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Handle" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="CheckedStoryboard" />
                                <StopStoryboard BeginStoryboardName="PressedNotCheckedExitStoryboard" />
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1_75}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="PressedCheckedExitStoryboard" Storyboard="{StaticResource Storyboard1_5}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="UncheckedStoryboard" />
                                <StopStoryboard BeginStoryboardName="PressedCheckedExitStoryboard" />
                                <BeginStoryboard Storyboard="{StaticResource Storyboard1_75}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard Name="PressedNotCheckedExitStoryboard" Storyboard="{StaticResource Storyboard1_0}" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedStoryboard" Storyboard="{StaticResource Storyboard1_5}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="UncheckedStoryboard" Storyboard="{StaticResource Storyboard1_0}" />
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Material.Colors.Primary}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.Primary}" />
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnPrimary}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.PrimaryContainer}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False" />
                    <Condition Property="IsEnabled" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurfaceVariant}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Material.Colors.OnSurface}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.OnSurface}" />
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.Surface}" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceVariant}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.OnSurfaceVariant}" />
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type components:SwitchThumb}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:SwitchThumb}">
                    <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>