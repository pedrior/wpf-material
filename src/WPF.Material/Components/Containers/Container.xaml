<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:foundations="clr-namespace:WPF.Material.Foundations"
    xmlns:styles="clr-namespace:WPF.Material.Styles">

    <Style TargetType="{x:Type components:StateLayer}">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Style.Triggers>
            <Trigger Property="foundations:Interaction.IsHovered" Value="True">
                <Setter Property="State" Value="Hovered" />
            </Trigger>
            <Trigger Property="foundations:Interaction.IsPressed" Value="True">
                <Setter Property="State" Value="Pressed" />
            </Trigger>
            <Trigger Property="foundations:Interaction.IsDragged" Value="True">
                <Setter Property="State" Value="Dragged" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type components:Container}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ShapeFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Family)}" />
        <Setter Property="ShapeStyle" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Style)}" />
        <Setter Property="ShapeCorner" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Corner)}" />
        <Setter Property="ShapeRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Radius)}" />
        <Setter Property="UseStyleOnRadiusOverride" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.UseStyleOnRadiusOverride)}" />
        <Setter Property="UseCornersOnRadiusOverride" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.UseCornersOnRadiusOverride)}" />
        <Setter Property="styles:Elevation.Level" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Elevation.Level)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:Container}">
                    <components:NaivePanel>
                        <components:ContainerSurface
                            x:Name="PART_Surface"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShapeCorner="{TemplateBinding ShapeCorner}"
                            ShapeFamily="{TemplateBinding ShapeFamily}"
                            ShapeRadius="{TemplateBinding ShapeRadius}"
                            ShapeStyle="{TemplateBinding ShapeStyle}"
                            UseCornersOnRadiusOverride="{TemplateBinding UseCornersOnRadiusOverride}"
                            UseStyleOnRadiusOverride="{TemplateBinding UseStyleOnRadiusOverride}" />

                        <components:StateLayer
                            foundations:Interaction.IsDragged="{TemplateBinding foundations:Interaction.IsDragged}"
                            foundations:Interaction.IsHovered="{TemplateBinding foundations:Interaction.IsHovered}"
                            foundations:Interaction.IsPressed="{TemplateBinding foundations:Interaction.IsPressed}"
                            Brush="{TemplateBinding Foreground}"
                            OutlineGeometry="{TemplateBinding RenderedGeometry}" />

                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </components:NaivePanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="styles:Elevation.Level" Value="None">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Null}" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="Level1">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Static styles:Elevations.Level1Shadow}" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="Level2">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Static styles:Elevations.Level2Shadow}" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="Level3">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Static styles:Elevations.Level3Shadow}" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="Level4">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Static styles:Elevations.Level4Shadow}" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="Level5">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Static styles:Elevations.Level5Shadow}" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.38" />
                            <Setter TargetName="PART_Surface" Property="Opacity" Value="0.12" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>