<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:WPF.Material.Common"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:foundations="clr-namespace:WPF.Material.Foundations"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:styles="clr-namespace:WPF.Material.Styles"
    mc:Ignorable="po">

    <DropShadowEffect
        x:Key="Material.Internal.Elevation1"
        po:Freeze="True"
        BlurRadius="3"
        Direction="270"
        Opacity="0.3"
        RenderingBias="Performance"
        ShadowDepth="1" />

    <DropShadowEffect
        x:Key="Material.Internal.Elevation2"
        po:Freeze="True"
        BlurRadius="6"
        Direction="270"
        Opacity="0.3"
        RenderingBias="Performance"
        ShadowDepth="2" />

    <DropShadowEffect
        x:Key="Material.Internal.Elevation3"
        po:Freeze="True"
        BlurRadius="8"
        Direction="270"
        Opacity="0.3"
        RenderingBias="Performance"
        ShadowDepth="3" />

    <DropShadowEffect
        x:Key="Material.Internal.Elevation4"
        po:Freeze="True"
        BlurRadius="10"
        Direction="270"
        Opacity="0.3"
        RenderingBias="Performance"
        ShadowDepth="4" />

    <DropShadowEffect
        x:Key="Material.Internal.Elevation5"
        po:Freeze="True"
        BlurRadius="12"
        Direction="270"
        Opacity="0.3"
        RenderingBias="Performance"
        ShadowDepth="6" />

    <Style TargetType="{x:Type components:Container}">
        <Setter Property="Background" Value="{DynamicResource Material.Colors.Surface}" />
        <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ShapeFamily" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Family)}" />
        <Setter Property="ShapeStyle" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Style)}" />
        <Setter Property="ShapeCorner" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Corner)}" />
        <Setter Property="ShapeRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.Radius)}" />
        <Setter Property="UseStyleOnRadiusOverride" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.UseStyleOnRadiusOverride)}" />
        <Setter Property="UseCornersOnRadiusOverride" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Shape.UseCornersOnRadiusOverride)}" />
        <Setter Property="styles:Elevation.Level" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(styles:Elevation.Level)}" />
        <Setter Property="foundations:Interaction.IsHovered" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(foundations:Interaction.IsHovered)}" />
        <Setter Property="foundations:Interaction.IsPressed" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(foundations:Interaction.IsPressed)}" />
        <Setter Property="foundations:Interaction.IsInteractive" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(foundations:Interaction.IsInteractive)}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:Container}">
                    <components:NaivePanel>
                        <components:Surface
                            x:Name="PART_Surface"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShapeCorner="{TemplateBinding ShapeCorner}"
                            ShapeFamily="{TemplateBinding ShapeFamily}"
                            ShapeRadius="{TemplateBinding ShapeRadius}"
                            ShapeStyle="{TemplateBinding ShapeStyle}"
                            UseCornersOnRadiusOverride="{TemplateBinding UseCornersOnRadiusOverride}"
                            UseStyleOnRadiusOverride="{TemplateBinding UseStyleOnRadiusOverride}" />

                        <components:Overlay
                            x:Name="StateLayer"
                            DefiningGeometry="{Binding ElementName=PART_Surface, Path=RenderedGeometry}"
                            Opacity="0.0"
                            Tint="{TemplateBinding Foreground}" />

                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </components:NaivePanel>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="foundations:Interaction.IsHovered" Value="True" />
                                <Condition Property="foundations:Interaction.IsInteractive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="StateLayer" Property="Opacity" Value="0.08" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="foundations:Interaction.IsPressed" Value="True" />
                                <Condition Property="foundations:Interaction.IsInteractive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="StateLayer" Property="Opacity" Value="0.1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="foundations:Interaction.IsDragged" Value="True" />
                                <Condition Property="foundations:Interaction.IsInteractive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="StateLayer" Property="Opacity" Value="0.16" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="0.38" />
                            <Setter TargetName="PART_Surface" Property="Opacity" Value="0.12" />
                        </Trigger>

                        <Trigger Property="styles:Elevation.Level" Value="None">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="styles:Elevation.Level" Value="Level1">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{StaticResource Material.Internal.Elevation1}" />
                        </Trigger>
                        <Trigger Property="styles:Elevation.Level" Value="Level2">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{StaticResource Material.Internal.Elevation2}" />
                        </Trigger>
                        <Trigger Property="styles:Elevation.Level" Value="Level3">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{StaticResource Material.Internal.Elevation3}" />
                        </Trigger>
                        <Trigger Property="styles:Elevation.Level" Value="Level4">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{StaticResource Material.Internal.Elevation4}" />
                        </Trigger>
                        <Trigger Property="styles:Elevation.Level" Value="Level5">
                            <Setter TargetName="PART_Surface" Property="Effect" Value="{StaticResource Material.Internal.Elevation5}" />
                        </Trigger>

                        <Trigger Property="BorderThicknessContributesToContentMargin" Value="True">
                            <Setter TargetName="Content" Property="Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{common:ThicknessAdderConverter}">
                                        <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>