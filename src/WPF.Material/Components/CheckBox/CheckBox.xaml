<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:foundations="clr-namespace:WPF.Material.Foundations"
    xmlns:styles="clr-namespace:WPF.Material.Styles">

    <Style TargetType="{x:Type components:CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="foundations:Layout.InnerWidth" Value="40" />
        <Setter Property="foundations:Layout.InnerHeight" Value="40" />
        <Setter Property="styles:Typography.Style" Value="{styles:TypeStyle Style=LabelLarge, Height=0}" />
        <Setter Property="foundations:Interaction.IsHovered" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="foundations:Interaction.IsPressed" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" />
        <Setter Property="foundations:Interaction.IsFocused" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:CheckBox}">
                    <components:NaivePanel x:Name="PART_Panel" Background="Transparent">
                        <components:Container
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                            <components:SpacedPanel Margin="{TemplateBinding Padding}">
                                <components:Ripple
                                    x:Name="PART_Ripple"
                                    Width="{TemplateBinding foundations:Layout.InnerWidth}"
                                    Height="{TemplateBinding foundations:Layout.InnerHeight}"
                                    ClippingGeometry="{Binding ElementName=PART_Container, Path=RenderedGeometry}"
                                    Foreground="{TemplateBinding Foreground}">

                                    <components:Container
                                        x:Name="PART_Container"
                                        Background="Transparent"
                                        Foreground="{TemplateBinding Foreground}"
                                        ShapeCorner="All"
                                        ShapeStyle="Full"
                                        UseCornersOnRadiusOverride="None">

                                        <components:SymbolIcon
                                            x:Name="Icon"
                                            FontSize="24"
                                            Foreground="{TemplateBinding Foreground}"
                                            IsFilled="True"
                                            Symbol="CheckBoxOutlineBlank" />
                                    </components:Container>
                                </components:Ripple>

                                <ContentPresenter
                                    x:Name="Content"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    components:SpacedPanel.StretchHorizontally="True"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    IsHitTestVisible="False"
                                    RecognizesAccessKey="True"
                                    TextElement.Foreground="{TemplateBinding Foreground}" />
                            </components:SpacedPanel>
                        </components:Container>
                    </components:NaivePanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Symbol" Value="CheckBox" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Symbol" Value="IndeterminateCheckBox" />
                        </Trigger>

                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="Content" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsPanelHitTestVisible" Value="False">
                            <Setter TargetName="PART_Panel" Property="Background" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.Primary}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.Primary}" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
            </Trigger>

            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Width" Value="48" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>