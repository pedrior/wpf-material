<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:foundations="clr-namespace:WPF.Material.Foundations"
    xmlns:styles="clr-namespace:WPF.Material.Styles">

    <Style TargetType="{x:Type components:Card}">
        <Setter Property="Background" Value="{DynamicResource Material.Colors.Surface}" />
        <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.OutlineVariant}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="styles:Shape.Style" Value="Medium" />
        <Setter Property="foundations:Interaction.IsHovered" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="foundations:Interaction.IsPressed" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" />
        <Setter Property="foundations:Interaction.IsFocused" Value="{Binding RelativeSource={RelativeSource Self}, Path=IsKeyboardFocused}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:Card}">
                    <components:Ripple ClippingGeometry="{Binding ElementName=Container, Path=RenderedGeometry}" Foreground="{TemplateBinding Foreground}">
                        <components:Container
                            x:Name="Container"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            TextElement.Foreground="{TemplateBinding Foreground}" />
                    </components:Ripple>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Filled  -->
            <Trigger Property="Appearance" Value="Filled">
                <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceContainerHighest}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>

            <!--  Elevated  -->
            <Trigger Property="Appearance" Value="Elevated">
                <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceContainerLow}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="styles:Elevation.Level" Value="Level1" />
            </Trigger>

            <!--  Hovered  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="styles:Elevation.Level" Value="Level1" />
            </Trigger>

            <!--  Outlined && Focused  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Outlined" />
                    <Condition Property="IsKeyboardFocused" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.OnSurface}" />
            </MultiTrigger>

            <!--  Outlined && Disabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Outlined" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.Outline}" />
            </MultiTrigger>

            <!--  Filled && Hovered  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Filled" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="styles:Elevation.Level" Value="Level1" />
            </MultiTrigger>

            <!--  Filled && Disabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Filled" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceVariant}" />
            </MultiTrigger>

            <!--  Elevated && Hovered  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Elevated" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="styles:Elevation.Level" Value="Level2" />
            </MultiTrigger>

            <!--  Elevated && Disabled  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Appearance" Value="Elevated" />
                    <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Material.Colors.Surface}" />
            </MultiTrigger>

            <!--  Clickable  -->
            <Trigger Property="IsClickable" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsClickable" Value="False">
                <Setter Property="foundations:Interaction.IsInteractive" Value="False" />
                <Setter Property="foundations:Interaction.IsRippleEnabled" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>