<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:WPF.Material.Common"
    xmlns:components="clr-namespace:WPF.Material.Components"
    xmlns:styles="clr-namespace:WPF.Material.Styles">

    <Style TargetType="{x:Type components:SideSheet}">
        <Setter Property="Background" Value="{DynamicResource Material.Colors.Surface}" />
        <Setter Property="Foreground" Value="{DynamicResource Material.Colors.OnSurface}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Material.Colors.Outline}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="MinWidth" Value="252" />
        <Setter Property="MaxWidth" Value="400" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="styles:Shape.Style" Value="None" />
        <Setter Property="styles:Shape.Corner" Value="All" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type components:SideSheet}">
                    <components:NaivePanel Background="Transparent">
                        <ContentPresenter
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            components:SpacedPanel.StretchVertically="True"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />

                        <components:Divider
                            x:Name="Divider"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Stretch"
                            Brush="{TemplateBinding BorderBrush}"
                            Orientation="Vertical"
                            Thickness="{TemplateBinding BorderThickness,
                                                        Converter={common:ThicknessToDoubleConverter}}" />
                    </components:NaivePanel>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsModal" Value="True">
                            <Setter TargetName="Divider" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="IsDocked" Value="False">
                            <Setter TargetName="Divider" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <Trigger Property="ShowDivider" Value="False">
                            <Setter TargetName="Divider" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ShowDivider" Value="true" />
                                <Condition Property="HorizontalAlignment" Value="Left" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Divider" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsModal" Value="True">
                <Setter Property="Background" Value="{DynamicResource Material.Colors.SurfaceContainerLow}" />
                <Setter Property="styles:Elevation.Level" Value="Level1" />
            </Trigger>

            <Trigger Property="IsDocked" Value="False">
                <Setter Property="styles:Shape.Style" Value="Large" />
                <Setter Property="styles:Shape.Corner" Value="All" />
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDocked" Value="True" />
                    <Condition Property="HorizontalAlignment" Value="Right" />
                </MultiTrigger.Conditions>
                <Setter Property="styles:Shape.Corner" Value="TopLeft, BottomLeft" />
            </MultiTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDocked" Value="True" />
                    <Condition Property="HorizontalAlignment" Value="Left" />
                </MultiTrigger.Conditions>
                <Setter Property="styles:Shape.Corner" Value="TopRight, BottomRight" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>